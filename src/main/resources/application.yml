server:
  port: 8080
spring:
  application:
    name: blog-user
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: select 1 from dual
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      filter:
        stat:
          log-slow-sql: true
          db-type: mysql
          slow-sql-millis: 2000
        log4j:
          enabled: true
      stat-view-servlet:
        login-username: qingchun
        login-password: 729512117
        enabled: true
        url-pattern: /druid/*
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: .js,.gif,.jpg,.css,/druid/*
      max-pool-prepared-statement-per-connection-size: 20
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      url: jdbc:mysql://localhost:3306/blog?Encoding=utf-8&useSSL=false&ServerTimezone=GMT%2B8
      username: root
      password: 729512117
      driver-class-name: com.mysql.cj.jdbc.Driver
  rabbitmq:
    host: 172.18.0.7
    port: 5672
    username: zhuqingchun
    password: 729512117
  redis:
    cluster:
      nodes: 127.0.0.1:6381,127.0.0.1:6382,127.0.0.1:6383,127.0.0.1:6384,127.0.0.1:6385,127.0.0.1:6386
      max-redirects: 2
    jedis:
      pool:
        max-idle: 8
        max-wait: -1ms
        min-idle: 0
        max-active: 8
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 11MB
  kafka:
    bootstrap-servers: 127.0.0.1:9093,127.0.0.1:9094,127.0.0.1:9095
    producer:
      acks: all
      buffer-memory: 100MB
      compression-type: snappy
      retries: 2
      batch-size: 10240
      client-id: message-queue
      bootstrap-servers: 127.0.0.1:9093,127.0.0.1:9094,127.0.0.1:9095
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      bootstrap-servers: 127.0.0.1:9093,127.0.0.1:9094,127.0.0.1:9095
      enable-auto-commit: false
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  mail:
    host: smtp.qq.com
    username: 729512117@qq.com
    password: cgqadtgtvieybbjb
    default-encoding: UTF-8

mybatis:
  mapper-locations: classpath:mappers/*xml
  type-aliases-package: com.user.entity

#jwt configuration
jwt:
  tokenHeader: accessToken
  authHeader: authorities
  tokenPrefix: Bearer
  secret: sexygirls
  expiration: 60
dubbo:
  application:
    name: blog-user
  registry:
    address: zookeeper://127.0.0.1:21812
    protocol: zookeeper
  scan:
    base-packages: com.user.controller,com.user.service.impl
task:
  pool:
    corePoolSize: 20
    maxPoolSize: 40
    keepAliveSeconds: 300
    queueCapacity: 50
